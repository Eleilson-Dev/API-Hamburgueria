// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  password String
  orders   Order[]
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  status     String // Status do pedido: 'pendente', 'conclu√≠do', 'cancelado', etc.
  orderItems OrderItem[]
  priceOrder Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now()) @updatedAt
}

model Hamburguer {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  ingredients String[]
  size        String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
  OrderItem   OrderItem[]
}

model OrderItem {
  id           Int        @id @default(autoincrement())
  order        Order      @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId      Int
  hamburguerId Int
  quantity     Int
  hamburguer   Hamburguer @relation(fields: [hamburguerId], references: [id], onDelete: Cascade)
}
